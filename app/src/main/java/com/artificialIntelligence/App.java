/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.artificialIntelligence;



import org.xml.sax.Attributes;
import org.xml.sax.SAXException;
import org.xml.sax.helpers.DefaultHandler;
import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;
import java.util.Set;
import java.util.HashSet;
import java.util.Scanner;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.node.ObjectNode;

public class SAXXMLReader {
    public static void main(String[] args) {
        try {
            Scanner scanner = new Scanner(System.in);
            Set<String> selectedFields = new HashSet<>();
            
            System.out.println("Enter fields to display (comma-separated): ");
            String[] fields = scanner.nextLine().split(",");
            for (String field : fields) {
                selectedFields.add(field.trim());
            }
            
            SAXParserFactory factory = SAXParserFactory.newInstance();
            SAXParser saxParser = factory.newSAXParser();
            SAXHandler handler = new SAXHandler(selectedFields);
            
            saxParser.parse("path/to/your/file.xml", handler);
            
            ObjectMapper mapper = new ObjectMapper();
            String jsonString = mapper.writerWithDefaultPrettyPrinter().writeValueAsString(handler.getJsonNode());
            System.out.println(jsonString);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}

class SAXHandler extends DefaultHandler {
    private Set<String> selectedFields;
    private ObjectNode jsonNode;
    private String currentElement;

    public SAXHandler(Set<String> selectedFields) {
        this.selectedFields = selectedFields;
        this.jsonNode = new ObjectMapper().createObjectNode();
    }

    public ObjectNode getJsonNode() {
        return jsonNode;
    }

    @Override
    public void startElement(String uri, String localName, String qName, Attributes attributes) throws SAXException {
        currentElement = qName;
    }

    @Override
    public void characters(char[] ch, int start, int length) throws SAXException {
        if (currentElement != null && selectedFields.contains(currentElement)) {
            jsonNode.put(currentElement, new String(ch, start, length));
        }
    }

    @Override
    public void endElement(String uri, String localName, String qName) throws SAXException {
        currentElement = null;
    }
}
